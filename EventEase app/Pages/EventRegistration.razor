@page "/register"
@using Microsoft.AspNetCore.Components.Forms
@using System.ComponentModel.DataAnnotations

<h1>Registro de Evento</h1>

@if (!registrationSubmitted)
{
    <EditForm Model="registration" OnValidSubmit="HandleSubmit">
        <DataAnnotationsValidator />
        <ValidationSummary />

        <div class="form-group">
            <label for="fullName">Nombre Completo:</label>
            <InputText id="fullName" class="form-control" @bind-Value="registration.FullName" />
            <ValidationMessage For="@(() => registration.FullName)" />
        </div>
        <div class="form-group">
            <label for="email">Correo electrónico:</label>
            <InputText id="email" class="form-control" @bind-Value="registration.Email" />
            <ValidationMessage For="@(() => registration.Email)" />
        </div>
        <div class="form-group">
            <label for="phone">Teléfono:</label>
            <InputText id="phone" class="form-control" @bind-Value="registration.Phone" />
            <ValidationMessage For="@(() => registration.Phone)" />
        </div>
        <button type="submit" class="btn btn-primary">Registrarse</button>
    </EditForm>
}
else
{
    <div class="alert alert-success">
        ¡Registro exitoso! Se ha enviado una confirmación a su correo.
    </div>
}

@code {
    private RegistrationModel registration = new RegistrationModel();
    private bool registrationSubmitted = false;

    private void HandleSubmit()
    {
        registrationSubmitted = true;
    }

    public class RegistrationModel
    {
        [Required(ErrorMessage = "El nombre es obligatorio.")]
        public string FullName { get; set; }

        [Required(ErrorMessage = "El email es obligatorio.")]
        [EmailAddress(ErrorMessage = "El formato del email no es válido.")]
        public string Email { get; set; }

        [Required(ErrorMessage = "El teléfono es obligatorio.")]
        public string Phone { get; set; }
    }
}
